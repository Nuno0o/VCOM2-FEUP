import numpy as np 
from sklearn.metrics import confusion_matrix
a=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]
b=np.array([[0],[1],[0],[0],[2],[0],[2],[0],[2],[2],[0],[0],[2],[0],[2],[0],[0],[0],[0],[0],[0],[0],[2],[0],[0],[2],[0],[0],[0],[2],[0],[2],[2],[0],[0],[0],[0],[0],[2],[2],[0],[3],[0],[0],[0],[1],[0],[0],[0],[0],[0],[0],[1],[4],[1],[1],[0],[0],[2],[0],[1],[0],[2],[1],[2],[0],[2],[2],[0],[0],[0],[0],[0],[2],[0],[0],[0],[0],[0],[1],[0],[3],[2],[0],[0],[0],[0],[0],[0],[0],[2],[2],[2],[2],[0],[0],[0],[0],[0],[2],[0],[0],[0],[0],[0],[1],[1],[1],[1],[1],[1],[1],[2],[1],[2],[1],[1],[1],[1],[1],[1],[1],[2],[2],[2],[2],[2],[2],[2],[2],[1],[1],[2],[2],[2],[1],[1],[1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[1],[2],[2],[2],[2],[1],[1],[1],[1],[1],[1],[1],[2],[2],[2],[1],[1],[1],[2],[2],[0],[0],[1],[1],[1],[1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[2],[0],[1],[0],[1],[1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[0],[2],[2],[2],[2],[2],[1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[0],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[0],[2],[2],[0],[2],[0],[2],[2],[2],[2],[2],[2],[2],[2],[0],[0],[2],[2],[0],[2],[2],[2],[0],[0],[3],[3],[3],[0],[2],[3],[4],[3],[4],[4],[4],[4],[2],[2],[2],[0],[0],[2],[0],[0],[0],[0],[0],[2],[0],[0],[0],[2],[2],[2],[2],[3],[3],[3],[3],[3],[3],[4],[4],[2],[3],[3],[3],[3],[3],[3],[1],[2],[2],[2],[2],[2],[1],[2],[1],[0],[3],[2],[2],[3],[3],[0],[3],[0],[3],[0],[0],[3],[3],[3],[3],[3],[3],[1],[3],[3],[2],[0],[2],[3],[3],[0],[3],[2],[3],[3],[3],[0],[0],[0],[2],[0],[0],[0],[4],[3],[4],[4],[4],[0],[4],[0],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[0],[4],[0],[4],[4],[3],[4],[2],[4],[0],[3],[4],[0],[4],[4],[3],[4],[4],[4],[1],[4],[1],[4]])
b = np.squeeze(b)
print('Confusion Matrix: \n' + str(confusion_matrix(a,b)))
correct = 0
total = len(a)
for i in range(0, len(a)):
    if a[i] == b[i]:
        correct += 1

print('Accuracy: ' + str(correct/len(a)))